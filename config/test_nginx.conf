user  nginx;
worker_processes  1;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
events {
  worker_connections  1024;
}
http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log  /var/log/nginx/access.log  main;
  sendfile        on;
  keepalive_timeout  65;
  server {
    listen       80 default_server;
    server_name  _;

    gzip on;
    gzip_min_length 1k; # 允许压缩的页面最小字节数
	gzip_buffers 32 16K; # 申请32个单位为16k的内容作为压缩结果流缓存
	gzip_comp_level 6; # 级别越高,压的越小,越浪费CPU计算资源
	gzip_types text/plain application/x-javascript text/css application/xml; # 图片，视频等不要压缩，因为不但不会减小，在压缩时消耗cpu和内存资源
    gzip_disable "MSIE [1-6]\."; # 配置禁用gzip条件，支持正则。此处表示ie6及以下不启用gzip（因为ie低版本不支持）
    gzip_vary on; # 可以让前端的缓存服务器缓存经过gzip压缩的页面，例如用squid缓存经过nginx压缩的数据

    location / {
      root   /data;
      index  index.html;
      add_header Cache-Control no-cache;
      expires 0;
      try_files $uri $uri/ /index.html;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
      root   /usr/share/nginx/html;
    }
  }
}
